name: Validate code

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate_commit:
    name: Validate commit
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9.x'
          architecture: 'x64'
      - name: Install Poetry and dependencies
        uses: SneaksAndData/github-actions/install_poetry@v0.0.4
        with:
          pypi_repo_url: ${{ secrets.AZOPS_PYPI_REPO_URL }}
          pypi_token_username: ${{ secrets.AZOPS_PAT_USER }}
          pypi_token: ${{ secrets.AZOPS_PAT }}
      - name: Lint
        run: |
          set -e

          pypath=$(pwd)
          export PYTHONPATH="$pypath:$PYTHONPATH"

          find ./esd_services_api_client -type f -name "*.py" | xargs poetry run pylint
      - name: Unit test
        run: |
          set -e

          pypath=$(pwd)
          export PYTHONPATH="$pypath:$PYTHONPATH"

          poetry run pytest ./tests

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ validate_commit ]
    if: ${{ github.ref == 'refs/heads/main' && (needs.validate_commit.result == 'success' || needs.validate_commit.result == 'skipped') && always() }}

    steps:
      - uses: actions/checkout@v2
      - run: git fetch --prune --unshallow
      - name: Create Release
        uses: SneaksAndData/github-actions/semver_release@v0.0.4
        with:
          major_v: 0
          minor_v: 0